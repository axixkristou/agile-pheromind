{
  "scribeSettings": {
    "defaultPheromoneFile": ".pheromone",
    "maxMemoryBankSignalsBeforePruning": 0,
    "signalsToPrune": 0,
    "logLevel": "INFO",
    "backupPheromoneBeforeWrite": true
  },
  "interpretationLogic": [
    {
      "id": "process_performance_insight_report",
      "priority": 25,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@performance-optimization-agent"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Performance analysis for '{{componentName}}' completed. .* Report \\(with reasoning\\): `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "Performance Optimization Report for {{componentName}}",
          "documentType": "PerformanceReport"
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.performanceInsights.componentPerformanceStatus.{{componentName}}",
          "value": {
            "summary": "{{summaryText | extractKeyFindings}}",
            "link": "{{reportPath}}",
            "timestamp": "{{timestamp}}",
            "reasoningChainLink": "{{reportPath}}"
          }
        }
      ]
    },
    {
      "id": "process_accessibility_report",
      "priority": 25,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@accessibility-compliance-agent"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Accessibility check for '{{componentName}}' completed. .* Report \\(with reasoning\\): `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "Accessibility Compliance Report for {{componentName}}",
          "documentType": "AccessibilityReport"
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.accessibilityCompliance.componentAccessibilityStatus.{{componentName}}",
          "value": {
            "summary": "{{summaryText | extractKeyFindings}}",
            "link": "{{reportPath}}",
            "timestamp": "{{timestamp}}",
            "reasoningChainLink": "{{reportPath}}"
          }
        }
      ]
    },
    {
      "id": "process_learning_insights_report",
      "priority": 25,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@learning-integration-agent"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Learning analysis for '{{focus}}' completed. .* Report \\(with reasoning\\): `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "Learning Insights Report for {{focus}}",
          "documentType": "LearningInsightsReport"
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.learningInsights",
          "valueFromSummary": "{{summaryText | extractKeyFindings}}",
          "mergeStrategy": "deep"
        }
      ]
    },
    {
      "id": "process_refactoring_report",
      "priority": 25,
      "conditions": [
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Refactoring of '{{componentName}}' completed. .* Report \\(with reasoning\\): `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "Code Refactoring Report for {{componentName}}",
          "documentType": "RefactoringReport"
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.refactoringHistory.completedRefactorings.{{componentName}}",
          "value": {
            "summary": "{{summaryText | extractKeyFindings}}",
            "link": "{{reportPath}}",
            "timestamp": "{{timestamp}}",
            "reasoningChainLink": "{{reportPath}}"
          }
        }
      ]
    },
    {
      "id": "log_general_agent_activity",
      "priority": 999,
      "conditions": [
        {
          "field": "summaryText",
          "operator": "isNotEmpty"
        }
      ],
      "actions": [
        {
          "type": "appendToMemoryBankSection",
          "targetSection": "memoryBank.agentActivityLog",
          "value": {
            "timestamp": "{{timestamp}}",
            "agent": "{{agentName}}",
            "handoffReason": "{{handoffReasonCode}}",
            "summary": "{{summaryText | truncate:500}}"
          }
        }
      ]
    },
    {
      "id": "update_currentUser_from_devops_connector_or_session",
      "priority": 10,
      "conditions": [
        {
          "field": "summaryText",
          "operator": "containsAny",
          "values": ["Utilisateur '{{azureUser}}' identifié.", "Utilisateur '{{azureUser}}' confirmé."]
        }
      ],
      "actions": [
        {
          "type": "updatePheromoneField",
          "targetField": "currentUser.azureDevOpsUsername",
          "valueFromSummary": "{{azureUser}}"
        },
        {
          "type": "updatePheromoneField",
          "targetField": "currentUser.id",
          "valueFromSummary": "{{azureUser | toLower | replace:'.':'_'}}",
          "comment": "Generates a Pheromind ID from Azure username; could be more robust."
        }
      ]
    },
    {
      "id": "process_clarification_request_initiation",
      "priority": 15,
      "conditions": [
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Clarification needed from user by agent '{{originalAgent}}' regarding '{{originalPromptContext}}'. Question: '{{clarificationQuestion}}'. Clarification ID: {{clarificationId}}."
        }
      ],
      "actions": [
        {
          "type": "updatePheromoneField",
          "targetField": "clarificationContext",
          "value": {
            "pendingClarificationId": "{{clarificationId}}",
            "originalAgent": "{{originalAgent}}",
            "originalPromptContext": "{{originalPromptContext}}",
            "clarificationQuestion": "{{clarificationQuestion}}",
            "timestampRequested": "{{timestamp}}"
          }
        }
      ]
    },
    {
      "id": "process_clarification_response_from_user",
      "priority": 16,
      "conditions": [
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "User response received for clarification ID '{{clarificationId}}': '{{userResponse}}'. Original context was for agent '{{originalAgent}}'."
        }
      ],
      "actions": [
        {
          "type": "appendToMemoryBankSection",
          "targetSection": "memoryBank.clarificationHistory",
          "value": {
            "clarificationId": "{{clarificationId}}",
            "originalAgent": "{{originalAgent}}",
            "originalPromptContext": "{{clarificationContext.originalPromptContext}}",
            "questionToUser": "{{clarificationContext.clarificationQuestion}}",
            "userResponse": "{{userResponse}}",
            "timestampRequested": "{{clarificationContext.timestampRequested}}",
            "timestampResponded": "{{timestamp}}",
            "impactOnWorkflow": "Response provided to UO for workflow resumption."
          }
        },
        {
          "type": "updatePheromoneField",
          "targetField": "clarificationContext.pendingClarificationId",
          "value": null
        }
      ]
    },
    {
      "id": "start_user_story_processing_v2",
      "priority": 20,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@devops-connector"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Détails pour US 'Azure#{{usId}}' ('{{usTitle}}') récupérés. Description: '{{usDescription}}'. État Azure: '{{usAzureStatus}}'. Priorité: {{usPriority}}.*"
        }
      ],
      "actions": [
        {
          "type": "updatePheromoneField",
          "targetField": "activeUserStory",
          "value": {
            "id": "Azure#{{usId}}",
            "title": "{{usTitle}}",
            "descriptionFromAzure": "{{usDescription}}",
            "status": "InProgressByPheromind",
            "azureStatus": "{{usAzureStatus}}",
            "priority": "{{usPriority | toInt}}",
            "tasks": []
          }
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.userStories.{{usId}}",
          "value": {
            "title": "{{usTitle}}",
            "descriptionFull": "{{usDescription}}",
            "azureStatus": "{{usAzureStatus}}",
            "priority": "{{usPriority | toInt}}",
            "statusHistory": [
              { "status": "InProgressByPheromind", "timestamp": "{{timestamp}}", "actor": "AgilePheromindSystem", "developer": "{{currentUser.id}}" }
            ],
            "tasks": [],
            "analysisSummaries": [],
            "keyDecisions": [],
            "relatedCommits": [],
            "uiValidationHistory": [],
            "reasoningChainLinks": []
          },
          "mergeStrategy": "deep"
        },
        {
          "type": "addToDocumentationRegistryIfPath",
          "documentPathFromSummary": "{{summaryText | extractLogPath}}",
          "description": "Azure DevOps Work Item Details Log for US Azure#{{usId}}",
          "documentType": "LogFile"
        }
      ]
    },
    {
      "id": "process_task_breakdown_v2",
      "priority": 25,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@task-breakdown-estimator"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Analyse et décomposition de l'US 'Azure#{{usId}}' terminées. .* Rapport détaillé de décomposition : `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "Task breakdown report for US Azure#{{usId}}",
          "documentType": "TaskBreakdownReport"
        },
        {
          "type": "appendToMemoryBankSection",
          "targetSection": "memoryBank.userStories.{{usId}}.analysisSummaries",
          "value": {
            "type": "TaskBreakdownEstimation",
            "summary": "{{summaryText | extractKeyFindings}}",
            "link": "{{reportPath}}",
            "timestamp": "{{timestamp}}"
          }
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.userStories.{{usId}}.reasoningChainLinks.taskBreakdown",
          "valueFromSummary": "{{reportPath}}",
          "comment": "Assuming report contains reasoning chain"
        }
      ]
    },
    {
      "id": "process_po_need_analysis_report_v2",
      "priority": 20,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@po-assistant"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Analyse du besoin client .* terminée. .* Rapport complet avec recommandations disponible à `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "PO Need Analysis Report",
          "documentType": "AnalysisReport"
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.userStories.{{activeUserStory.id | or:'draft_' + reportPath | extractFilenameWithoutExt}}.analysisSummaries[]",
          "value": {
            "type": "PO_NeedAnalysis",
            "summary": "{{summaryText | extractKeyFindings}}",
            "link": "{{reportPath}}",
            "timestamp": "{{timestamp}}"
          }
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.userStories.{{activeUserStory.id | or:'draft_' + reportPath | extractFilenameWithoutExt}}.reasoningChainLinks.poAnalysis",
          "valueFromSummary": "{{reportPath}}"
        }
      ]
    },
    {
      "id": "process_legacy_analysis_report_v2",
      "priority": 20,
      "conditions": [
        {
          "field": "agentName",
          "operator": "equals",
          "value": "@migration-analyst-agent"
        },
        {
          "field": "summaryText",
          "operator": "matches",
          "value": "Analyse de migration du codebase legacy '{{legacyProjectName}}' terminée. .* Rapport détaillé: `{{reportPath}}`."
        }
      ],
      "actions": [
        {
          "type": "addToDocumentationRegistry",
          "documentPathFromSummary": "{{reportPath}}",
          "description": "Legacy Code Analysis Report for {{legacyProjectName}}",
          "documentType": "MigrationAnalysisReport"
        },
        {
          "type": "updateMemoryBankField",
          "targetField": "memoryBank.legacyCodeAnalyses.{{reportPath | extractFilenameWithoutExt}}",
          "value": {
            "summary": "{{summaryText | extractKeyFindings}}",
            "link": "{{reportPath}}",
            "timestamp": "{{timestamp}}",
            "reasoningChainLink": "{{reportPath}}"
          }
        }
      ]
    },
    {
      "id": "process_workflow_error_logging",
      "priority": 5,
      "conditions": [
        {
          "field": "summaryText",
          "operator": "containsAny",
          "values": ["ÉCHEC", "ERREUR", "Impossible de continuer", "MCP call failed"]
        },
        {
          "field": "agentName",
          "operator": "notEquals",
          "value": "✍️ @orchestrator-pheromone-scribe"
        }
      ],
      "actions": [
        {
          "type": "updatePheromoneField",
          "targetField": "activeWorkflow.lastError",
          "value": {
            "agent": "{{agentName}}",
            "phase": "{{activeWorkflow.currentPhase}}",
            "message": "{{summaryText}}",
            "timestamp": "{{timestamp}}"
          }
        },
        {
          "type": "updatePheromoneField",
          "targetField": "activeWorkflow.status",
          "value": "Error"
        }
      ]
    }
  ],
  "actionImplementations": {
    "updatePheromoneField": "Updates a direct field in the root of the .pheromone object. Uses dot notation for nested fields. Can create fields if they don't exist.",
    "appendToMemoryBankSection": "Appends a value to a list within a specific section of .pheromone.memoryBank. Creates list if needed. Target field can use '[]' to signify appending to a list.",
    "updateMemoryBankField": "Updates a field within the .pheromone.memoryBank object. Uses dot notation. Can create fields. Supports '[]' for appending to lists within memoryBank.",
    "addToDocumentationRegistry": "Adds or updates an entry in .pheromone.documentationRegistry.",
    "addToDocumentationRegistryIfPath": "Similar to addToDocumentationRegistry, but only acts if a valid path is extracted.",
    "updateTaskStatusInMemoryBank": "Specific action to find a task by ID in memoryBank.tasks and update its status and statusHistory.",
    "updateTaskStatusInActiveUserStory": "Specific action to find a task by ID in activeUserStory.tasks and update its status."
  },
  "valueExtractors": {
    "extractFilename": "A function that extracts the filename from a full path string.",
    "extractFilenameWithoutExt": "Extracts filename without extension.",
    "extractKeyFindings": "A function that attempts to get a very short summary of key findings from a longer text.",
    "extractOverallStatus": "A function that tries to determine an overall status (e.g., OK, Warning, Error, Pass, Fail) from a summary text.",
    "extractLogLink": "A function that looks for URLs or file paths that seem to be log files in a summary.",
    "extractLogPath": "Extracts a file path if explicitly mentioned for logging.",
    "toInt": "Converts extracted string value to an integer, defaults to 0 if conversion fails.",
    "toLower": "Converts string to lowercase.",
    "replace": "Replaces occurrences of a substring with another. Usage: {{value | replace:'substring_to_find':'replacement_substring'}}",
    "truncate": "Truncates a string to a specified length. Usage: {{value | truncate:maxLength}}",
    "or": "Provides a fallback value if the primary extraction fails or is empty. Usage: {{primaryValue | or:fallbackValue}}"
  }
}